version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

services:
  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: mana-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts/:/etc/prometheus/alerts/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.wal-compression'
      - '--query.timeout=60s'
    networks:
      - monitoring
    labels:
      - "monitoring=prometheus"

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:9.2.0
    container_name: mana-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=mana-ethereum-admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_ALERTING_ENABLED=false
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    networks:
      - monitoring
    labels:
      - "monitoring=grafana"

  # AlertManager - Alert Management
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: mana-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.advertise-address=0.0.0.0:9093'
      - '--log.level=info'
    networks:
      - monitoring
    labels:
      - "monitoring=alertmanager"

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:v1.4.0
    container_name: mana-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    labels:
      - "monitoring=node-exporter"

  # Grafana Image Renderer - For alerts and reports
  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: mana-grafana-renderer
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ENABLE_METRICS=true
    networks:
      - monitoring
    labels:
      - "monitoring=renderer"

  # Redis - For caching (optional, for high-scale deployments)
  redis:
    image: redis:7-alpine
    container_name: mana-redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - monitoring
    labels:
      - "monitoring=redis"

volumes:
  redis_data: