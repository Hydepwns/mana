{
  "permissions": {
    "allow": [
      "Bash(mix test:*)",
      "Bash(mix compile:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(mix credo list:*)",
      "Bash(elixir:*)",
      "Bash(brew list:*)",
      "Bash(brew:*)",
      "Bash(asdf:*)",
      "Bash(export KERL_CONFIGURE_OPTIONS=\"--without-javac --with-ssl=/usr/local/opt/openssl@3\")",
      "Bash(mix deps.get:*)",
      "Bash(mix local.hex:*)",
      "Bash(mix local.rebar:*)",
      "Bash(mix format:*)",
      "Bash(mix credo:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/antidote_cluster.sh:*)",
      "Bash(curl:*)",
      "Bash(docker logs:*)",
      "Bash(mix deps.compile:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "WebFetch(domain:eips.ethereum.org)",
      "Bash(mix run:*)",
      "Bash(./scripts/fix_arm64_compatibility.sh:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(make:*)",
      "Bash(mix deps.unlock:*)",
      "Bash(mix deps.clean:*)",
      "Bash(rm:*)",
      "Bash(mix clean:*)",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(git push:*)",
      "Bash(cargo build:*)",
      "Bash(cargo doc:*)",
      "Bash(RUSTLER_SKIP_COMPILE=1 mix test test/ex_wire/eth2/parallel_attestation_processor_simplified_test.exs --no-compile)",
      "Bash(MIX_ENV=test RUSTLER_SKIP_COMPILE=1 mix compile --force)",
      "WebFetch(domain:github.com)",
      "Bash(MIX_ENV=test RUSTLER_SKIP_COMPILE=1 mix test apps/ex_wire/test/ex_wire/eth2/consensus_spec_test.exs --exclude slow --no-compile)",
      "Bash(RUSTLER_SKIP_COMPILE=1 mix compile --force)",
      "Bash(touch:*)",
      "Bash(cargo check:*)",
      "Bash(iex:*)",
      "Bash(exit)",
      "Bash(MIX_ENV=test mix test test/ex_wire/crypto/kzg_test.exs)",
      "Bash(MIX_ENV=test mix test test/ex_wire/crypto/kzg_test.exs --seed 0 --trace)",
      "Bash(MIX_ENV=test mix test test/ex_wire/crypto/kzg_test.exs --seed 0)",
      "Bash(MIX_ENV=test mix test test/ex_wire/crypto/kzg_test.exs:75 --seed 0)",
      "Bash(MIX_ENV=test mix test test/ex_wire/eth2/blob_integration_test.exs --trace)",
      "Bash(MIX_ENV=test mix test test/ex_wire/eth2/blob_integration_test.exs)",
      "Bash(MIX_ENV=test mix test test/ex_wire/eth2/blob_integration_test.exs --no-compile)",
      "WebFetch(domain:verkle.info)",
      "Bash(mix benchmark.verkle:*)",
      "Bash(MIX_ENV=test mix test apps/ex_wire/test/ex_wire/layer2/layer2_integration_test.exs --only layer2)",
      "Bash(MIX_ENV=test mix test apps/ex_wire/test/ex_wire/layer2/layer2_integration_test.exs:30 --trace)",
      "Bash(MIX_ENV=test mix compile)",
      "Bash(MIX_ENV=test mix test apps/ex_wire/test/ex_wire/layer2/layer2_integration_test.exs:129 --trace)",
      "Bash(MIX_ENV=test mix test apps/ex_wire/test/ex_wire/layer2/layer2_integration_test.exs:129)",
      "Bash(MIX_ENV=test mix test apps/ex_wire/test/ex_wire/layer2/layer2_integration_test.exs --trace)",
      "Bash(MIX_ENV=test mix test apps/ex_wire/test/ex_wire/layer2/layer2_integration_test.exs --no-start)",
      "Bash(MIX_ENV=test mix run benchmark_layer2.exs)",
      "Bash(MIX_ENV=test mix run -e \"ExWire.Layer2.PerformanceBenchmark.run_full_benchmark()\")",
      "Bash(MIX_ENV=test mix run -e \"ExWire.Layer2.PerformanceBenchmark.run_full_benchmark()\")",
      "Bash(./scripts/deploy_layer2_testnet.sh:*)",
      "Bash(MIX_ENV=test mix test apps/ex_wire/test/ex_wire/layer2/layer2_integration_test.exs --no-compile)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(mix deps.update:*)"
    ],
    "deny": []
  }
}